#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: OpenWrt-X86

on:
  workflow_dispatch:
    inputs:
      manual:
        description: '手动触发一次编译'
#  schedule:
#    - cron: 0 18 * * 5

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: x86.config
  BANNER_FILE: banner
  CONFIG_GENERATE_FILE: config_generate
  SHADOW_FILE: shadow
  DIY_P1_SH: diy1.sh
  DIY_P2_SH: diy2.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  PUSHPLUS_TOKEN: ${{ secrets.PUSHPLUS_TOKEN }}
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 检查项目分支
      uses: actions/checkout@main

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        #sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.eu.org/init_build_environment.sh)'
        sudo apt update -y
        sudo apt full-upgrade -y
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext \
        genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev \
        libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev \
        libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf \
        python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion \
        swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo apt autoremove -y --purge
        sudo apt clean -y
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "FIRMWARE_VERSION=$(date +"%y%m%d")" >> $GITHUB_ENV
        echo "START_DATE=$(date +'%Y年%m月%d日 %H点%M分%S秒')" >> $GITHUB_ENV

    - name: PushPlus 通知
      if: env.PUSHPLUS_TOKEN
      continue-on-error: true
      run: |
        curl -k -d "title=开始编译OpenWrt-X86固件" -d "content=编译固件版本：${{ env.FIRMWARE_VERSION }}%0A编译开始时间：${{ env.START_DATE }}" -d "token=${{ env.PUSHPLUS_TOKEN }}" "http://www.pushplus.plus/send"
    
    - name: 下载源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载软件源
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 更新软件源
      run: |
        cd openwrt
        # 确保 feeds.conf 包含 small feed
        ###echo "src-git small https://github.com/kenzok8/small-package" >> feeds.conf
        ###echo "src-git packages https://git.openwrt.org/feed/packages.git" >> feeds.conf
        ./scripts/feeds update -a || { echo "软件源更新失败"; exit 1; }
        # 删除 smpackage 中的指定包
        rm -rf ./feeds/smpackage/{base-files,dnsmasq,firewall*,fullconenat,libnftnl,nftables,ppp,opkg,ucl,upx,vsftpd*,miniupnpd-iptables,wireless-regdb} || echo "smpackage 部分包不存在"
        # 删除 luci 和 packages 中指定包
        rm -rf ./package/feeds/luci/{luci-app-openclash,luci-app-passwall,luci-app-passwall2,luci-app-smartdns,luci-app-upnp}
        rm -rf ./package/feeds/packages/smartdns
        # 调试：检查 feeds/small 内容
        ls -l feeds/small || { echo "feeds/small 目录不存在或为空"; exit 1; }

    - name: 安装软件源
      run: |
        cd openwrt
        ./scripts/feeds install -a || { echo "软件源安装失败"; exit 1; }
        # 安装特定依赖
        ./scripts/feeds install libpam || echo "libpam 未找到"
        ./scripts/feeds install libtirpc || echo "libtirpc 未找到"
        ./scripts/feeds install libaio || echo "libaio 未找到"
        # 确保目标目录存在
        #mkdir -p ./package/feeds/small
        # 创建软链接
        ln -sf ./feeds/small/luci-app-passwall/ ./package/feeds/small || echo "luci-app-passwall 不存在"
        ln -sf ./feeds/small/luci-app-passwall2/ ./package/feeds/small || echo "luci-app-passwall2 不存在"
        ln -sf ./feeds/small/luci-app-openclash/ ./package/feeds/small || echo "luci-app-openclash 不存在"
        ln -sf ./feeds/small/luci-app-smartdns/ ./package/feeds/small || echo "luci-app-smartdns 不存在"
        ln -sf ./feeds/small/smartdns/ ./package/feeds/small || echo "smartdns 不存在"
    

    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        # 复制配置文件
        [ -e $CONFIG_GENERATE_FILE ] && mv $CONFIG_GENERATE_FILE openwrt/package/base-files/files/bin/config_generate
        [ -e $CONFIG_GENERATE_FILE ] && mv $CONFIG_GENERATE_FILE openwrt/package/base-files/luci2/bin/config_generate
        [ -e $SHADOW_FILE ] && mv $SHADOW_FILE openwrt/package/base-files/files/etc/shadow
        [ -e $BANNER_FILE ] && mv $BANNER_FILE openwrt/package/base-files/files/etc/banner
        cat extra.config >> openwrt/.config
        cat chinadns-ng.patch >> openwrt/feeds/packages/net/aircrack-ng/Makefile
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 下载包
      id: package
      run: |
        pwd
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s || (curl -k -d "title=OpenWrt-360T7固件编译失败" -d "content=编译固件版本：${{ env.FIRMWARE_VERSION }}%0A编译开始时间：${{ env.START_DATE }}%0A编译结束时间：$(date +'%Y年%m月%d日 %H点%M分%S秒')" -d "token=${{ env.PUSHPLUS_TOKEN }}&channel=cp&webhook=server" "http://www.pushplus.plus/send")
        echo "status=success" >> $GITHUB_OUTPUT

        
    - name: 整理固件
      id: organize
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        # 整理固件包时候,删除您不想要的固件或者文件,让它不需要上传到Actions空间
        cd openwrt/bin/targets/*/*
        rm -rf packages
        rm -rf version.buildinfo
        rm -rf profiles.json
        rm -rf *rootfs*
        rm -rf *kernel*
        rm -rf *.manifest
        rm -rf sha256sums
        mv *sysupgrade.bin ${{ env.FIRMWARE_VERSION }}-OpenWrt-360T7-108M-sysupgrade.bin
        mv *factory.bin ${{ env.FIRMWARE_VERSION }}-OpenWrt-360T7-108M-factory.bin
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件到Github Action空间
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ${{ env.FIRMWARE_VERSION }}-OpenWrt-360T7
        path: ${{ env.FIRMWARE }}

    - name: 创建release标签
      id: tag
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        release_tag="${{ env.FIRMWARE_VERSION }}-OpenWrt-360T7"
        echo "编译时间：$(date +'%Y年%m月%d日 %H点%M分')" >> release.txt
        echo "默认网关：192.168.50.1" >> release.txt
        echo "默认插件："$(cat extra.config|sed 's/#.*//g;s/CONFIG_PACKAGE_.*=n//g'|sed 's/CONFIG_PACKAGE_\(.*\)=y/\1/g')|sed 's/ /、/g' >> release.txt
        echo "release_tag=$release_tag" >> $GITHUB_OUTPUT
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 将固件上传到release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        name: ${{ env.FIRMWARE_VERSION }}-OpenWrt-360T7
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: PushPlus 通知
      if: env.PUSHPLUS_TOKEN
      continue-on-error: true
      run: |
        curl -k -d "title=OpenWrt-360T7固件编译成功" -d "content=编译固件版本：${{ env.FIRMWARE_VERSION }}%0A编译开始时间：${{ env.START_DATE }}%0A编译结束时间：$(date +'%Y年%m月%d日 %H点%M分%S秒')" -d "token=${{ env.PUSHPLUS_TOKEN }}" "http://www.pushplus.plus/send"

    - name: 删除工作流运行
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: 删除旧的releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
